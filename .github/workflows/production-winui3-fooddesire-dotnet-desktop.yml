# This workflow will build, sign, and package a WinUI 3 MSIX desktop application
# built on .NET.

name: WinUI 3 MSIX app

on:
  pull_request:
    branches: [production-ims]

jobs:
  build:
    strategy:
      matrix:
        configuration: [Release]
        platform: [x64, x86]

    runs-on: windows-latest

    env:
      Solution_Name: FoodDesire

    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Setting Environment Variables
        env:
          APPSETTINGS_PRODUCTION: ${{ secrets.APPSETTINGS_PRODUCTION }}
        run: |
          Set-Content -Path "Src/FoodDesire.AppSettings/appsettings.Production.json" -Value $env:APPSETTINGS_PRODUCTION
          Set-Content -Path "Src/FoodDesire.AppSettings/appsettings.Development.json" -Value $env:APPSETTINGS_PRODUCTION
        shell: pwsh

      - name: Install .NET Core
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 7.0.x

      - name: Setup MSBuild.exe
        uses: microsoft/setup-msbuild@v1.0.2

      - name: Restore the application
        run: msbuild .\Src\FoodDesire.IMS\ /t:Restore /p:Configuration=$env:Configuration
        env:
          Configuration: ${{ matrix.configuration }}

      - name: Decode the pfx
        run: |
          $pfx_cert_byte = [System.Convert]::FromBase64String("${{ secrets.BASE64_ENCODED_PFX }}")
          $certificatePath = ".\Src\FoodDesire.IMS\GitHubActionsWorkflow.pfx"
          [IO.File]::WriteAllBytes("$certificatePath", $pfx_cert_byte)

      - name: Create the app package
        run: msbuild .\Src\FoodDesire.IMS\ /p:Configuration=$env:Configuration /p:Platform=$env:Platform /p:UapAppxPackageBuildMode=$env:Appx_Package_Build_Mode /p:AppxBundle=$env:Appx_Bundle /p:PackageCertificateKeyFile=GitHubActionsWorkflow.pfx /p:AppxPackageDir="$env:Appx_Package_Dir" /p:GenerateAppxPackageOnBuild=true
        env:
          Appx_Bundle: Never
          Appx_Package_Build_Mode: SideloadOnly
          Appx_Package_Dir: Packages\
          Configuration: ${{ matrix.configuration }}
          Platform: ${{ matrix.platform }}

      - name: Remove the pfx
        run: Remove-Item -path .\Src\FoodDesire.IMS\GitHubActionsWorkflow.pfx

      - name: Upload MSIX package
        uses: actions/upload-artifact@v2
        with:
          name: MSIX Package
          path: .\Src\FoodDesire.IMS\Packages

  release:
    needs: build
    runs-on: windows-latest
    steps:
      - name: Download MSIX package
        uses: actions/download-artifact@v2
        with:
          name: MSIX Package

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: release-${{ github.event_name }}-${{ github.run_number }}-${{ github.run_id }}
          release_name: Release ${{ github.event_name }}-${{ github.run_number }}-${{ github.run_id }}
          draft: false
          prerelease: false

      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: .\MSIX Package\FoodDesire.IMS_1.0.0.0_x64_Test\FoodDesire.IMS_1.0.0.0_x64.msix
          asset_name: FoodDesire.IMS_1.0.0.0_x64.msix
          asset_content_type: application/octet-stream
